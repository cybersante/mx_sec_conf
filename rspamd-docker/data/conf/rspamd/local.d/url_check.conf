# How long to cache dereferenced links in Redis (default 1 day)
expire = 1d;
# Timeout for HTTP requests (10 seconds by default)
timeout = 4; # 10 seconds by default
# How many nested redirects to follow (default 1)
nested_limit = 2;
# Prefix for keys in redis (default "rdr:")
key_prefix = "urld:";
# Check SSL certificates (default false)
check_ssl = false;
# How many urls to check
max_urls = 10;
# Maximum body to process
max_size = 8;
# no check internal url/ip
internal_url = false;
# check mx for domain
mx_check = true;
# check if resolv A host is same than A domain
a_check = true;
# Insert symbol if redirected url has been found
ip_blacklist_symbol = "URL_RESOLV_IP_IN_BLACKLIST";
redirector_symbol = "URL_REDIRECTED";
download_symbol = "URL_DOWNLOAD";
mimetype_symbol = "URL_SUSPECT_MIMETYPE";
filename_symbol = "URL_SUSPECT_FILENAME";
path_symbol = "URL_SUSPECT_PATH";
port_symbol = "URL_WITH_NO_STANDARD_PORT";
ip_symbol = "URL_WITH_IP";
subhost_suspect_symbol = "URL_WITH_SUSPECT_SUBHOST";
freehost_symbol = "URL_USE_FREEHOST";
mx_symbol = "URL_WITH_DOMAIN_NO_MX";
a_symbol = "URL_WITH_HOST_RESOLV_DOMAIN";
# adjust with "sub_host_number_part_max"
subhost_max_part_symbol = "SUBHOST_HAS_LOTOF_PART"
free_download_symbol = "URL_DOWNLOAD_ON_FREESITE";
# too much redirect for url, cannot be fully followed 
too_much_redir_symbol = "URL_TOO_MUCH_REDIRECT";
# Follow merely redirectors
redirectors_only = false;
# check all url, not just redirector_hosts_map
all_urls = true;
# Redis key for top urls
top_urls_key = 'rdr:top_urls';
# How many top urls to save
top_urls_count = 200;
# Check only those redirectors
#redirector_hosts_map = "${LOCAL_CONFDIR}/local.d/maps.d/redirectors.map";
# check mimetype in url header
suspect_mimetype_in_url_map = "${LOCAL_CONFDIR}/local.d/maps.d/suspect_mimetype_url.map";
# check mimetype map only allowed -- if false then map is checked in mode blacklist
mimetype_url_only_allow = true;
# if suspect_mimetype_in_url_map is map type regexp
mimetype_map_regexp = true;
# check filename (content-disposition) in url -- regexp map
suspect_filename_in_url_map = "${LOCAL_CONFDIR}/local.d/maps.d/suspect_filname_url.map";
# Check suspect path
suspect_path_in_url_map = "${LOCAL_CONFDIR}/local.d/maps.d/suspect_path_url.map";
#free hosted domain
free_hosted_dom_map = "${LOCAL_CONFDIR}/local.d/maps.d/freehosting.map";
#sub host max part for no suspect
sub_host_number_part_max = 2;
#subhost name suspect: paypal, bank, facebook...
sub_host_suspect_map = "${LOCAL_CONFDIR}/local.d/maps.d/subhost.map";
#host to use get method
host_use_get_map = "${LOCAL_CONFDIR}/local.d/maps.d/host_use_get.map";
#ip black list
url_ip_blacklist_map = "${LOCAL_CONFDIR}/local.d/maps.d/ip_bl.map";
